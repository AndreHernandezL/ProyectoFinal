@using Proyecto2_PrograIII.Components.Services
@inject IJSRuntime JS
@page "/"

<div class="row">
    <div class="col-12">
        <nav>
            <div class="nav nav-tabs" id="nav-tab" role="tablist">
                <button class="nav-link active" id="nav-insertar-tab" data-bs-toggle="tab" data-bs-target="#nav-insertar" type="button" role="tab" aria-controls="nav-insertar" aria-selected="true">Insertar</button>
                <button class="nav-link" id="nav-desAnt-tab" data-bs-toggle="tab" data-bs-target="#nav-desAnt" type="button" role="tab" aria-controls="nav-desAnt" aria-selected="false">Desendientes / Antecesor</button>
                <button class="nav-link" id="nav-NodointerExter-tab" data-bs-toggle="tab" data-bs-target="#nav-NodointerExter" type="button" role="tab" aria-controls="nav-NodointerExter" aria-selected="false">Nodos Interiores/Exteriores</button>
                <button class="nav-link" id="nav-NodoNivelGrado-tab" data-bs-toggle="tab" data-bs-target="#nav-NodoNivelGrado" type="button" role="tab" aria-controls="nav-NodoNivelGrado" aria-selected="false">Nodos Nivel/Grado</button>
                <button class="nav-link" id="nav-camInterExter-tab" data-bs-toggle="tab" data-bs-target="#nav-camInterExter" type="button" role="tab" aria-controls="nav-camInterExter" aria-selected="false">Camino Interno/Externo</button>
                <button class="nav-link" id="nav-comparacion-tab" data-bs-toggle="tab" data-bs-target="#nav-comparacion" type="button" role="tab" aria-controls="nav-comparacion" aria-selected="false">Comparación de Arboles</button>
                <button class="nav-link" id="nav-eliminacion-tab" data-bs-toggle="tab" data-bs-target="#nav-eliminacion" type="button" role="tab" aria-controls="nav-eliminacion" aria-selected="false">Eliminación de Hojas</button>
                <button class="nav-link" id="nav-intercambio-tab" data-bs-toggle="tab" data-bs-target="#nav-intercambio" type="button" role="tab" aria-controls="nav-intercambio" aria-selected="false">Intercambio de subarboles</button>
            </div>
            <div class="tab-content mt-3" id="nav-tabContent">
                <!--CREAR ARBOLES E INSERTAR ELEMENTOS AL ARBOL-->
                <div class="tab-pane fade show active" id="nav-insertar" role="tabpanel" aria-labelledby="nav-insertar-tab" tabindex="0">
                    <div class="row">
                        <div class="col-4">
                            <label for="dato" class="form-label">Dato a Ingresar</label>
                            <input type="number" class="form-control" id="dato" @bind="dato">
                        </div>
                        <div class="col-4">
                            <label for="arbolSelecionado" class="form-label">Arbol a Ingresar</label>
                            <select id="arbolSelecionado" class="form-select"  @bind="opcionIngreso">
                                <option value="0">Nuevo Arbol</option>
                                @foreach  (var arbolito in bosque.Arboles){
                                    <option value="@arbolito.Key">@arbolito.Key</option>
                                }
                            </select>
                        </div>
                        <div class="col-4 d-flex justify-content-center align-items-end">
                            <button class="btn btn-primary" @onclick="Ingresar">Ingresar</button>
                        </div>
                    </div>
                </div>
                <!---------------------------------------------->
                <!--CREAR BUCAR DESENDIENTES ANTECESORES-->
                <div class="tab-pane fade show" id="nav-desAnt" role="tabpanel" aria-labelledby="nav-desAnt-tab">
                    <div class="row">
                        <div class="col-4">
                            <label for="arbolSelecionado" class="form-label">Arbol</label>
                            <select id="arbolSelecionado" class="form-select" @bind="arbolSeleccionado">
                                <option value="0" selected>Seleccione un arbol</option>
                                @foreach  (var arbolito in bosque.Arboles){
                                    <option value="@arbolito.Key">@arbolito.Key</option>
                                }
                            </select>
                        </div>
                        <div class="col d-flex justify-content-center align-items-end">
                            <button class="btn btn-primary" @onclick="verArbol">Ver Arbol</button>
                        </div>
                        <div class="col-4">
                            <label for="dato" class="form-label">Dato a Buscar</label>
                            <input type="number" class="form-control" id="dato" @bind="dato">
                        </div>
                        <div class="col d-flex justify-content-center align-items-end">
                            <button class="btn btn-primary" @onclick="BuscarAntDes">Buscar</button>
                        </div>
                        <div class="col-12 mt-3 d-flex">
                            <div class="alert alert-primary" role="alert" style="width: fit-content">
                                <p><strong>Padre: </strong>@(padre)</p>
                                <p><strong>Hijo Derecho: </strong>@(hijo_derecho)</p>
                                <p><strong>Hijo Izquierdo: </strong>@(hijo_izquierdo)</p>
                            </div>
                        </div>
                    </div>
                </div>
                <!---------------------------------------------->
                <!--MUESTRA LOS NODOS INTERNOS Y EXTERNOS-->
                <div class="tab-pane fade" id="nav-NodointerExter" role="tabpanel">
                    <div class="row">
                        <div class="col-4">
                            <label for="arbolSelecionado" class="form-label">Arbol</label>
                            <select id="arbolSelecionado" class="form-select" @bind="arbolSeleccionado">
                                <option value="0" selected>Seleccione un arbol</option>
                                @foreach (var arbolito in bosque.Arboles)
                                {
                                    <option value="@arbolito.Key">@arbolito.Key</option>
                                }
                            </select>
                        </div>
                        <div class="col-3 d-flex justify-content-center align-items-end">
                            <button class="btn btn-primary" @onclick="NodoInterExter">Ver nodos</button>
                        </div>
                    </div>
                    <div class="row mt-3">
                        <div class="col-12">
                            <div class="alert alert-success d-flex align-items-center" role="alert" style="gap: 5px; width: fit-content;">
                                <strong>Nodos Interno:</strong>
                                @for (int i = 0; i < interiores.Length-1; i++)
                                {
                                    <button type="button" class="btn btn-secondary rounded-circle">@(interiores[i])</button>
                                }
                            </div>
                        </div>
                        <div class="col-12">
                            <div class="alert alert-primary d-flex align-items-center" role="alert" style="gap: 5px; width: fit-content;">
                                <strong>Nodos Externos:</strong>
                                @for (int i = 0; i < exteriores.Length - 1; i++)
                                {
                                    <button type="button" class="btn btn-danger rounded-circle">@(exteriores[i])</button>
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <!---------------------------------------------->
                <div class="tab-pane fade" id="nav-NodoNivelGrado" role="tabpanel">
                    <div class="row">
                        <div class="col-4">
                            <label for="arbolSelecionado" class="form-label">Arbol</label>
                            <select id="arbolSelecionado" class="form-select" @bind="arbolSeleccionado">
                                <option value="0" selected>Seleccione un arbol</option>
                                @foreach (var arbolito in bosque.Arboles)
                                {
                                    <option value="@arbolito.Key">@arbolito.Key</option>
                                }
                            </select>
                        </div>
                        <div class="col d-flex justify-content-center align-items-end">
                            <button class="btn btn-primary" @onclick="verArbol">Ver Arbol</button>
                        </div>
                        <div class="col-4">
                            <label for="dato" class="form-label">Dato a Buscar</label>
                            <input type="number" class="form-control" id="dato" @bind="dato">
                        </div>
                        <div class="col d-flex justify-content-center align-items-end">
                            <button class="btn btn-primary" @onclick="NodoGradoNivel">Buscar</button>
                        </div>
                        <div class="col-12 mt-3 d-flex">
                            <div class="alert alert-primary" role="alert" style="width: fit-content">
                                <p><strong>Nivel del Nodo: </strong>@(nivel)</p>
                                <p><strong>Grado del Nodo: </strong>@(grado)</p>
                            </div>
                        </div>
                    </div>
                </div>
                <!---------------------------------------------->
                <div class="tab-pane fade" id="nav-camInterExter" role="tabpanel">Contenido Caminos</div>
                <!---------------------------------------------->
                <div class="tab-pane fade" id="nav-comparacion" role="tabpanel">Contenido Comparación</div>
                <!---------------------------------------------->
                <div class="tab-pane fade" id="nav-eliminacion" role="tabpanel">Contenido Eliminación</div>
                <!---------------------------------------------->
                <div class="tab-pane fade" id="nav-intercambio" role="tabpanel">Contenido Intercambio</div>
                <!---------------------------------------------->
            </div>
        </nav>

    </div>
</div>

<div id="graphContainer" class="mt-5 d-flex justify-content-center"></div>
@rendermode InteractiveServer
@code {
    Bosque bosque = new Bosque();
    private ElementReference graphContainer;
    private string dotCode = string.Empty;
    private int dato = 0;
    private string opcionIngreso = "0";
    private string arbolSeleccionado = string.Empty;
    private string hijo_derecho = string.Empty;
    private string hijo_izquierdo = string.Empty;
    private string padre = string.Empty;

    private string[] interiores = [];
    private string[] exteriores = [];

    private int grado = 0;
    private int nivel = 0;


    public async Task RenderDot()
    {
        var svg = await JS.InvokeAsync<string>("renderGraphviz", dotCode);
        await JS.InvokeVoidAsync("eval", $"document.getElementById('graphContainer').innerHTML = `{svg}`;");

    }

    protected override void OnInitialized()
    {

    }

    private void BuscarAntDes(){

        if (arbolSeleccionado != "" && arbolSeleccionado != "0" && dato > 0)
        {
            var arbolito = bosque.Arboles[arbolSeleccionado];
            Nodo nodoEncontrado = arbolito.Busqueda(arbolito.NodoRaiz, dato);
            if (nodoEncontrado != null)
            {
                Nodo nodoPadre = arbolito.Padre(arbolito.NodoRaiz, dato);
                string hijo_derecho = nodoEncontrado.RamaDerecha != null ? nodoEncontrado.RamaDerecha.Dato.ToString() : "No tiene hijo en la rama derecha";
                string hijo_izquierdo = nodoEncontrado.RamaIzquierda != null ? nodoEncontrado.RamaIzquierda.Dato.ToString() : "No tiene hijo en la rama izquierda";
                string padre = nodoPadre != null ? nodoPadre.Dato.ToString() : "No tiene nodo padre";

                this.hijo_izquierdo = hijo_izquierdo;
                this.hijo_derecho=  hijo_derecho;
                this.padre = padre;

            }
        }
    }

    private void NodoInterExter()
    {
        if (arbolSeleccionado != "0" && arbolSeleccionado != "")
        {
            Arbol arbolito = bosque.Arboles[arbolSeleccionado];
            string inter = arbolito.NodosInternos(arbolito.NodoRaiz);
            string exter = arbolito.NodosExternos(arbolito.NodoRaiz);
            interiores = inter.Split(' ');
            exteriores = exter.Split(' ');
            verArbol();
        }
    }

    private void NodoGradoNivel()
    {
        if (arbolSeleccionado != "0" && arbolSeleccionado != "" && dato != 0)
        {
            Arbol arbolito = bosque.Arboles[arbolSeleccionado];
            Nodo nodito = arbolito.Busqueda(arbolito.NodoRaiz, dato);
            if (nodito != null)
            {
                int grado = arbolito.ObtenerGrado(nodito);
                int nivel = arbolito.ObtenerNivel(arbolito.NodoRaiz, dato);

                this.grado = grado;
                this.nivel = nivel;
            }
        }
    }

    private void Ingresar (){
        if (opcionIngreso.Equals("0") && dato != 0)
        {
            string nombreArbol = $"Arbol_{bosque.nombreNuevo()}";
            Arbol nuevoArbol = new Arbol();
            nuevoArbol.Insertar(nuevoArbol.NodoRaiz, dato);
            bosque.Arboles.Add(nombreArbol, nuevoArbol);

            //RENDERIZAMOS LA IMAGEN DEL ARBOL
            opcionIngreso = nombreArbol;
            dotCode = nuevoArbol.GenerarDot();
            RenderDot();
            dato = 0;
        }
        else if(!opcionIngreso.Equals("0") && dato != 0){
            var arbolito = bosque.Arboles[opcionIngreso];
            arbolito.Insertar(arbolito.NodoRaiz, dato);

            //RENDERIZAMOS LA IMAGEN DEL ARBOL
            dotCode = arbolito.GenerarDot();
            RenderDot();
            dato = 0;
        }
    }

    private void verArbol()
    {
        //RENDERIZAMOS LA IMAGEN DEL ARBOL
        if (arbolSeleccionado != "0" && arbolSeleccionado != "")
        {
            var arbolito = bosque.Arboles[arbolSeleccionado];
            dotCode = arbolito.GenerarDot();
            RenderDot();     
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("configurarTabs", DotNetObjectReference.Create(this));
        }
    }


    [JSInvokable]
    public void TabSeleccionado(string tabId)
    {
        // Limpiar variables cuando se cambia de pestaña
        padre = string.Empty;
        hijo_derecho = string.Empty;
        hijo_izquierdo = string.Empty;
        dato = 0;
        interiores = [];
        exteriores = [];

        // Forzar recarga visual
        InvokeAsync(StateHasChanged);

        Console.WriteLine($"Pestaña activa: {tabId}");
    }
    
}
